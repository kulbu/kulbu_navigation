footprint: [[ 0.3,  0.3], [-0.3,  0.3], [-0.3, -0.3], [ 0.3, -0.3]]
footprint_padding: 0.1
robot_radius: 0.205

transform_tolerance: 0.8
update_frequency: 5.0
publish_frequency: 5.0

#must match incoming static map
global_frame: map
robot_base_frame: base_link
resolution: 0.05

rolling_window: false
track_unknown_space: true

plugins:

    - {name: static,           type: "costmap_2d::StaticLayer"}
    - {name: explore_boundary, type: "frontier_exploration::BoundedExploreLayer"}
    #Can disable sensor layer if gmapping is fast enough to update scans
    - {name: sensor,           type: "costmap_2d::ObstacleLayer"}
    - {name: inflation,        type: "costmap_2d::InflationLayer"}

static:
    #Can pull data from gmapping, map_server or a non-rolling costmap
    map_topic: /map
    #map_topic: /planner/move_base/global_costmap/costmap
    subscribe_to_updates: true

explore_boundary:
    resize_to_boundary: false
    frontier_travel_point: closest
    #set to false for gmapping, true if re-exploring a known area
    explore_clear_space: false

# FIXME: Client [/explore_server] wants topic /kulbu/scan to have datatype/md5sum [sensor_msgs/PointCloud/d8e9c3f5afbdd8a130fd1d2763945fca], but our version has [sensor_msgs/LaserScan/90c7ef2dc6895d81024acba2ac42f369]. Dropping connection.
sensor:
    observation_sources: $(arg ns)/scan
    laser: {sensor_frame: laser_link, data_type: LaserScan, clearing: true, marking: true, topic: $(arg ns)/scan, inf_is_valid: true, raytrace_range: $(arg sensor_range), obstacle_range: $(arg sensor_range)}

inflation:
    inflation_radius: 0.55
